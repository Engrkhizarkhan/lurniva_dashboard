
                    # ./deploy_migrations.sh
                    # mysql -u lurnivauser -p'lurnivaDBPassword' lurnivaDB < /var/www/lurniva_dashboard/sql/lurnivaDB.sql >> This is the script to add database table using Ci/CD
name: Deploy to Lurniva VM

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VM_HOST }}
          username: LurnivaVM
          key: ${{ secrets.VM_KEY }}
          script: |
            cd /var/www/lurniva_dashboard

            # 1. Make sure LurnivaVM owns the repo so Git can run
            sudo chown -R LurnivaVM:LurnivaVM /var/www/lurniva_dashboard

            # 2. Allow Git in this directory
            git config --global --add safe.directory /var/www/lurniva_dashboard

            # 3. Start SSH agent and add GitHub deploy key
            eval $(ssh-agent -s)
            echo "${{ secrets.VM_PRIVATE_KEY }}" > ~/.ssh/id_ed25519_github
            chmod 600 ~/.ssh/id_ed25519_github
            ssh-add ~/.ssh/id_ed25519_github

            # 4. Pull latest code from GitHub
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            # 5. Set ownership for the web server
            sudo chown -R www-data:www-data /var/www/lurniva_dashboard

            # 6. Database Migration - Import/Update Database Schema
            echo "Running database migration..."
 
            # Create database
            mysql -u lurnivauser -p'lurniva@testVM' -e "CREATE DATABASE IF NOT EXISTS lurnivaDB"

            mysql -u lurnivauser -p'lurniva@testVM' lurnivaDB < /var/www/lurniva_dashboard/sql/lurnivaDB_production_ready.sql
            echo "Database migration completed."

            # 7. Reload PHP and Nginx services
            sudo systemctl restart php8.3-fpm
            sudo systemctl reload nginx

            # 8. Confirm deployment
            echo "Deployment to Lurniva VM completed successfully."